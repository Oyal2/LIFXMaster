// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.26.1
// source: proto/message_service.proto

package LIFXMaster

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Redefine the Device message to maintain the existing fields
type Device struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address           string             `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Port              uint32             `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	Target            uint64             `protobuf:"varint,3,opt,name=target,proto3" json:"target,omitempty"`
	Firmware          *Firmware          `protobuf:"bytes,4,opt,name=firmware,proto3" json:"firmware,omitempty"`
	Wifi              *WiFi              `protobuf:"bytes,5,opt,name=wifi,proto3" json:"wifi,omitempty"`
	Power             *Power             `protobuf:"bytes,6,opt,name=power,proto3" json:"power,omitempty"`
	Label             *Label             `protobuf:"bytes,7,opt,name=label,proto3" json:"label,omitempty"`
	Version           *Version           `protobuf:"bytes,8,opt,name=version,proto3" json:"version,omitempty"`
	Info              *Info              `protobuf:"bytes,9,opt,name=info,proto3" json:"info,omitempty"`
	Product           *Product           `protobuf:"bytes,10,opt,name=product,proto3" json:"product,omitempty"`
	Light             *Light             `protobuf:"bytes,11,opt,name=light,proto3" json:"light,omitempty"`
	Infrared          *Infrared          `protobuf:"bytes,12,opt,name=infrared,proto3" json:"infrared,omitempty"`
	Hev               *HEV               `protobuf:"bytes,13,opt,name=hev,proto3" json:"hev,omitempty"`
	ExtendedColorZone *ExtendedColorZone `protobuf:"bytes,14,opt,name=extended_color_zone,json=extendedColorZone,proto3" json:"extended_color_zone,omitempty"`
	Relay             *Relay             `protobuf:"bytes,15,opt,name=relay,proto3" json:"relay,omitempty"`
	Tile              *Tile              `protobuf:"bytes,16,opt,name=tile,proto3" json:"tile,omitempty"`
	Location          *Location          `protobuf:"bytes,17,opt,name=location,proto3" json:"location,omitempty"`
	Group             *Group             `protobuf:"bytes,18,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *Device) Reset() {
	*x = Device{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_message_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Device) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Device) ProtoMessage() {}

func (x *Device) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Device.ProtoReflect.Descriptor instead.
func (*Device) Descriptor() ([]byte, []int) {
	return file_proto_message_service_proto_rawDescGZIP(), []int{0}
}

func (x *Device) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Device) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *Device) GetTarget() uint64 {
	if x != nil {
		return x.Target
	}
	return 0
}

func (x *Device) GetFirmware() *Firmware {
	if x != nil {
		return x.Firmware
	}
	return nil
}

func (x *Device) GetWifi() *WiFi {
	if x != nil {
		return x.Wifi
	}
	return nil
}

func (x *Device) GetPower() *Power {
	if x != nil {
		return x.Power
	}
	return nil
}

func (x *Device) GetLabel() *Label {
	if x != nil {
		return x.Label
	}
	return nil
}

func (x *Device) GetVersion() *Version {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *Device) GetInfo() *Info {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *Device) GetProduct() *Product {
	if x != nil {
		return x.Product
	}
	return nil
}

func (x *Device) GetLight() *Light {
	if x != nil {
		return x.Light
	}
	return nil
}

func (x *Device) GetInfrared() *Infrared {
	if x != nil {
		return x.Infrared
	}
	return nil
}

func (x *Device) GetHev() *HEV {
	if x != nil {
		return x.Hev
	}
	return nil
}

func (x *Device) GetExtendedColorZone() *ExtendedColorZone {
	if x != nil {
		return x.ExtendedColorZone
	}
	return nil
}

func (x *Device) GetRelay() *Relay {
	if x != nil {
		return x.Relay
	}
	return nil
}

func (x *Device) GetTile() *Tile {
	if x != nil {
		return x.Tile
	}
	return nil
}

func (x *Device) GetLocation() *Location {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *Device) GetGroup() *Group {
	if x != nil {
		return x.Group
	}
	return nil
}

// Define the Group message to include an array of Device
type GroupMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Devices   []*Device `protobuf:"bytes,1,rep,name=devices,proto3" json:"devices,omitempty"`
	Label     string    `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	UpdatedAt string    `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *GroupMap) Reset() {
	*x = GroupMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_message_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupMap) ProtoMessage() {}

func (x *GroupMap) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupMap.ProtoReflect.Descriptor instead.
func (*GroupMap) Descriptor() ([]byte, []int) {
	return file_proto_message_service_proto_rawDescGZIP(), []int{1}
}

func (x *GroupMap) GetDevices() []*Device {
	if x != nil {
		return x.Devices
	}
	return nil
}

func (x *GroupMap) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *GroupMap) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

// Define the Location message to include an array of Group
type LocationMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Groups    map[string]*GroupMap `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Label     string               `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	UpdatedAt string               `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *LocationMap) Reset() {
	*x = LocationMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_message_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocationMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationMap) ProtoMessage() {}

func (x *LocationMap) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationMap.ProtoReflect.Descriptor instead.
func (*LocationMap) Descriptor() ([]byte, []int) {
	return file_proto_message_service_proto_rawDescGZIP(), []int{2}
}

func (x *LocationMap) GetGroups() map[string]*GroupMap {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *LocationMap) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *LocationMap) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type Group struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label     string `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	UpdatedAt string `protobuf:"bytes,2,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Group) Reset() {
	*x = Group{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_message_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Group) ProtoMessage() {}

func (x *Group) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Group.ProtoReflect.Descriptor instead.
func (*Group) Descriptor() ([]byte, []int) {
	return file_proto_message_service_proto_rawDescGZIP(), []int{3}
}

func (x *Group) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *Group) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type Location struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label     string `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	UpdatedAt string `protobuf:"bytes,2,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Location) Reset() {
	*x = Location{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_message_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Location) ProtoMessage() {}

func (x *Location) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Location.ProtoReflect.Descriptor instead.
func (*Location) Descriptor() ([]byte, []int) {
	return file_proto_message_service_proto_rawDescGZIP(), []int{4}
}

func (x *Location) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *Location) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type Firmware struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Build        uint64 `protobuf:"varint,1,opt,name=build,proto3" json:"build,omitempty"`
	VersionMinor uint32 `protobuf:"varint,2,opt,name=version_minor,json=versionMinor,proto3" json:"version_minor,omitempty"`
	VersionMajor uint32 `protobuf:"varint,3,opt,name=version_major,json=versionMajor,proto3" json:"version_major,omitempty"`
}

func (x *Firmware) Reset() {
	*x = Firmware{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_message_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Firmware) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Firmware) ProtoMessage() {}

func (x *Firmware) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Firmware.ProtoReflect.Descriptor instead.
func (*Firmware) Descriptor() ([]byte, []int) {
	return file_proto_message_service_proto_rawDescGZIP(), []int{5}
}

func (x *Firmware) GetBuild() uint64 {
	if x != nil {
		return x.Build
	}
	return 0
}

func (x *Firmware) GetVersionMinor() uint32 {
	if x != nil {
		return x.VersionMinor
	}
	return 0
}

func (x *Firmware) GetVersionMajor() uint32 {
	if x != nil {
		return x.VersionMajor
	}
	return 0
}

type WiFi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info     *WifiInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	Firmware *Firmware `protobuf:"bytes,2,opt,name=firmware,proto3" json:"firmware,omitempty"`
}

func (x *WiFi) Reset() {
	*x = WiFi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_message_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WiFi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WiFi) ProtoMessage() {}

func (x *WiFi) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WiFi.ProtoReflect.Descriptor instead.
func (*WiFi) Descriptor() ([]byte, []int) {
	return file_proto_message_service_proto_rawDescGZIP(), []int{6}
}

func (x *WiFi) GetInfo() *WifiInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *WiFi) GetFirmware() *Firmware {
	if x != nil {
		return x.Firmware
	}
	return nil
}

type Power struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Level uint32 `protobuf:"varint,1,opt,name=level,proto3" json:"level,omitempty"`
}

func (x *Power) Reset() {
	*x = Power{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_message_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Power) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Power) ProtoMessage() {}

func (x *Power) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Power.ProtoReflect.Descriptor instead.
func (*Power) Descriptor() ([]byte, []int) {
	return file_proto_message_service_proto_rawDescGZIP(), []int{7}
}

func (x *Power) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

type Label struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label string `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
}

func (x *Label) Reset() {
	*x = Label{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_message_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Label) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Label) ProtoMessage() {}

func (x *Label) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Label.ProtoReflect.Descriptor instead.
func (*Label) Descriptor() ([]byte, []int) {
	return file_proto_message_service_proto_rawDescGZIP(), []int{8}
}

func (x *Label) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

type Version struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vendor  uint32 `protobuf:"varint,1,opt,name=vendor,proto3" json:"vendor,omitempty"`
	Product uint32 `protobuf:"varint,2,opt,name=product,proto3" json:"product,omitempty"`
}

func (x *Version) Reset() {
	*x = Version{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_message_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Version) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Version) ProtoMessage() {}

func (x *Version) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Version.ProtoReflect.Descriptor instead.
func (*Version) Descriptor() ([]byte, []int) {
	return file_proto_message_service_proto_rawDescGZIP(), []int{9}
}

func (x *Version) GetVendor() uint32 {
	if x != nil {
		return x.Vendor
	}
	return 0
}

func (x *Version) GetProduct() uint32 {
	if x != nil {
		return x.Product
	}
	return 0
}

type WifiInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signal uint32 `protobuf:"varint,1,opt,name=signal,proto3" json:"signal,omitempty"`
}

func (x *WifiInfo) Reset() {
	*x = WifiInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_message_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WifiInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiInfo) ProtoMessage() {}

func (x *WifiInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiInfo.ProtoReflect.Descriptor instead.
func (*WifiInfo) Descriptor() ([]byte, []int) {
	return file_proto_message_service_proto_rawDescGZIP(), []int{10}
}

func (x *WifiInfo) GetSignal() uint32 {
	if x != nil {
		return x.Signal
	}
	return 0
}

type Info struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time     uint64 `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`
	Uptime   uint64 `protobuf:"varint,2,opt,name=uptime,proto3" json:"uptime,omitempty"`
	Downtime uint64 `protobuf:"varint,3,opt,name=downtime,proto3" json:"downtime,omitempty"`
}

func (x *Info) Reset() {
	*x = Info{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_message_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Info) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Info) ProtoMessage() {}

func (x *Info) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Info.ProtoReflect.Descriptor instead.
func (*Info) Descriptor() ([]byte, []int) {
	return file_proto_message_service_proto_rawDescGZIP(), []int{11}
}

func (x *Info) GetTime() uint64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *Info) GetUptime() uint64 {
	if x != nil {
		return x.Uptime
	}
	return 0
}

func (x *Info) GetDowntime() uint64 {
	if x != nil {
		return x.Downtime
	}
	return 0
}

type Product struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pid      uint32    `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	Name     string    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Features *Features `protobuf:"bytes,3,opt,name=features,proto3" json:"features,omitempty"`
	Upgrades *Upgrade  `protobuf:"bytes,4,opt,name=upgrades,proto3" json:"upgrades,omitempty"`
}

func (x *Product) Reset() {
	*x = Product{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_message_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Product) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Product) ProtoMessage() {}

func (x *Product) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Product.ProtoReflect.Descriptor instead.
func (*Product) Descriptor() ([]byte, []int) {
	return file_proto_message_service_proto_rawDescGZIP(), []int{12}
}

func (x *Product) GetPid() uint32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *Product) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Product) GetFeatures() *Features {
	if x != nil {
		return x.Features
	}
	return nil
}

func (x *Product) GetUpgrades() *Upgrade {
	if x != nil {
		return x.Upgrades
	}
	return nil
}

type Upgrade struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Major    uint32    `protobuf:"varint,1,opt,name=major,proto3" json:"major,omitempty"`
	Minor    uint32    `protobuf:"varint,2,opt,name=minor,proto3" json:"minor,omitempty"`
	Features *Features `protobuf:"bytes,3,opt,name=features,proto3" json:"features,omitempty"`
}

func (x *Upgrade) Reset() {
	*x = Upgrade{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_message_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Upgrade) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Upgrade) ProtoMessage() {}

func (x *Upgrade) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Upgrade.ProtoReflect.Descriptor instead.
func (*Upgrade) Descriptor() ([]byte, []int) {
	return file_proto_message_service_proto_rawDescGZIP(), []int{13}
}

func (x *Upgrade) GetMajor() uint32 {
	if x != nil {
		return x.Major
	}
	return 0
}

func (x *Upgrade) GetMinor() uint32 {
	if x != nil {
		return x.Minor
	}
	return 0
}

func (x *Upgrade) GetFeatures() *Features {
	if x != nil {
		return x.Features
	}
	return nil
}

type Features struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hev                        bool                   `protobuf:"varint,1,opt,name=hev,proto3" json:"hev,omitempty"`
	Color                      bool                   `protobuf:"varint,2,opt,name=color,proto3" json:"color,omitempty"`
	Chain                      bool                   `protobuf:"varint,3,opt,name=chain,proto3" json:"chain,omitempty"`
	Matrix                     bool                   `protobuf:"varint,4,opt,name=matrix,proto3" json:"matrix,omitempty"`
	Relays                     bool                   `protobuf:"varint,5,opt,name=relays,proto3" json:"relays,omitempty"`
	Buttons                    bool                   `protobuf:"varint,6,opt,name=buttons,proto3" json:"buttons,omitempty"`
	Infrared                   bool                   `protobuf:"varint,7,opt,name=infrared,proto3" json:"infrared,omitempty"`
	Multizone                  bool                   `protobuf:"varint,8,opt,name=multizone,proto3" json:"multizone,omitempty"`
	TemperatureRange           []int32                `protobuf:"varint,9,rep,packed,name=temperature_range,json=temperatureRange,proto3" json:"temperature_range,omitempty"`
	ExtendedMultizone          bool                   `protobuf:"varint,10,opt,name=extended_multizone,json=extendedMultizone,proto3" json:"extended_multizone,omitempty"`
	MinExtMzFirmware           *wrapperspb.Int32Value `protobuf:"bytes,11,opt,name=min_ext_mz_firmware,json=minExtMzFirmware,proto3" json:"min_ext_mz_firmware,omitempty"`
	MinExtMzFirmwareComponents []int32                `protobuf:"varint,12,rep,packed,name=min_ext_mz_firmware_components,json=minExtMzFirmwareComponents,proto3" json:"min_ext_mz_firmware_components,omitempty"`
}

func (x *Features) Reset() {
	*x = Features{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_message_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Features) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Features) ProtoMessage() {}

func (x *Features) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Features.ProtoReflect.Descriptor instead.
func (*Features) Descriptor() ([]byte, []int) {
	return file_proto_message_service_proto_rawDescGZIP(), []int{14}
}

func (x *Features) GetHev() bool {
	if x != nil {
		return x.Hev
	}
	return false
}

func (x *Features) GetColor() bool {
	if x != nil {
		return x.Color
	}
	return false
}

func (x *Features) GetChain() bool {
	if x != nil {
		return x.Chain
	}
	return false
}

func (x *Features) GetMatrix() bool {
	if x != nil {
		return x.Matrix
	}
	return false
}

func (x *Features) GetRelays() bool {
	if x != nil {
		return x.Relays
	}
	return false
}

func (x *Features) GetButtons() bool {
	if x != nil {
		return x.Buttons
	}
	return false
}

func (x *Features) GetInfrared() bool {
	if x != nil {
		return x.Infrared
	}
	return false
}

func (x *Features) GetMultizone() bool {
	if x != nil {
		return x.Multizone
	}
	return false
}

func (x *Features) GetTemperatureRange() []int32 {
	if x != nil {
		return x.TemperatureRange
	}
	return nil
}

func (x *Features) GetExtendedMultizone() bool {
	if x != nil {
		return x.ExtendedMultizone
	}
	return false
}

func (x *Features) GetMinExtMzFirmware() *wrapperspb.Int32Value {
	if x != nil {
		return x.MinExtMzFirmware
	}
	return nil
}

func (x *Features) GetMinExtMzFirmwareComponents() []int32 {
	if x != nil {
		return x.MinExtMzFirmwareComponents
	}
	return nil
}

type Light struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hue        uint32 `protobuf:"varint,1,opt,name=hue,proto3" json:"hue,omitempty"`
	Saturation uint32 `protobuf:"varint,2,opt,name=saturation,proto3" json:"saturation,omitempty"`
	Brightness uint32 `protobuf:"varint,3,opt,name=brightness,proto3" json:"brightness,omitempty"`
	Kelvin     uint32 `protobuf:"varint,4,opt,name=kelvin,proto3" json:"kelvin,omitempty"`
	Power      uint32 `protobuf:"varint,5,opt,name=power,proto3" json:"power,omitempty"`
	Label      string `protobuf:"bytes,6,opt,name=label,proto3" json:"label,omitempty"`
}

func (x *Light) Reset() {
	*x = Light{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_message_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Light) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Light) ProtoMessage() {}

func (x *Light) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Light.ProtoReflect.Descriptor instead.
func (*Light) Descriptor() ([]byte, []int) {
	return file_proto_message_service_proto_rawDescGZIP(), []int{15}
}

func (x *Light) GetHue() uint32 {
	if x != nil {
		return x.Hue
	}
	return 0
}

func (x *Light) GetSaturation() uint32 {
	if x != nil {
		return x.Saturation
	}
	return 0
}

func (x *Light) GetBrightness() uint32 {
	if x != nil {
		return x.Brightness
	}
	return 0
}

func (x *Light) GetKelvin() uint32 {
	if x != nil {
		return x.Kelvin
	}
	return 0
}

func (x *Light) GetPower() uint32 {
	if x != nil {
		return x.Power
	}
	return 0
}

func (x *Light) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

type HSBK struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hue        uint32 `protobuf:"varint,1,opt,name=hue,proto3" json:"hue,omitempty"`
	Saturation uint32 `protobuf:"varint,2,opt,name=saturation,proto3" json:"saturation,omitempty"`
	Brightness uint32 `protobuf:"varint,3,opt,name=brightness,proto3" json:"brightness,omitempty"`
	Kelvin     uint32 `protobuf:"varint,4,opt,name=kelvin,proto3" json:"kelvin,omitempty"`
}

func (x *HSBK) Reset() {
	*x = HSBK{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_message_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HSBK) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HSBK) ProtoMessage() {}

func (x *HSBK) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HSBK.ProtoReflect.Descriptor instead.
func (*HSBK) Descriptor() ([]byte, []int) {
	return file_proto_message_service_proto_rawDescGZIP(), []int{16}
}

func (x *HSBK) GetHue() uint32 {
	if x != nil {
		return x.Hue
	}
	return 0
}

func (x *HSBK) GetSaturation() uint32 {
	if x != nil {
		return x.Saturation
	}
	return 0
}

func (x *HSBK) GetBrightness() uint32 {
	if x != nil {
		return x.Brightness
	}
	return 0
}

func (x *HSBK) GetKelvin() uint32 {
	if x != nil {
		return x.Kelvin
	}
	return 0
}

type Infrared struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Brightness uint32 `protobuf:"varint,1,opt,name=brightness,proto3" json:"brightness,omitempty"`
}

func (x *Infrared) Reset() {
	*x = Infrared{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_message_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Infrared) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Infrared) ProtoMessage() {}

func (x *Infrared) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Infrared.ProtoReflect.Descriptor instead.
func (*Infrared) Descriptor() ([]byte, []int) {
	return file_proto_message_service_proto_rawDescGZIP(), []int{17}
}

func (x *Infrared) GetBrightness() uint32 {
	if x != nil {
		return x.Brightness
	}
	return 0
}

type HEV struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cycle           *Cycle           `protobuf:"bytes,1,opt,name=cycle,proto3" json:"cycle,omitempty"`
	Config          *Config          `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	LastCycleResult *LastCycleResult `protobuf:"bytes,3,opt,name=last_cycle_result,json=lastCycleResult,proto3" json:"last_cycle_result,omitempty"`
}

func (x *HEV) Reset() {
	*x = HEV{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_message_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HEV) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HEV) ProtoMessage() {}

func (x *HEV) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HEV.ProtoReflect.Descriptor instead.
func (*HEV) Descriptor() ([]byte, []int) {
	return file_proto_message_service_proto_rawDescGZIP(), []int{18}
}

func (x *HEV) GetCycle() *Cycle {
	if x != nil {
		return x.Cycle
	}
	return nil
}

func (x *HEV) GetConfig() *Config {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *HEV) GetLastCycleResult() *LastCycleResult {
	if x != nil {
		return x.LastCycleResult
	}
	return nil
}

type Cycle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DurationS  uint32 `protobuf:"varint,1,opt,name=duration_s,json=durationS,proto3" json:"duration_s,omitempty"`
	RemainingS uint32 `protobuf:"varint,2,opt,name=remaining_s,json=remainingS,proto3" json:"remaining_s,omitempty"`
	LastPower  uint32 `protobuf:"varint,3,opt,name=last_power,json=lastPower,proto3" json:"last_power,omitempty"`
}

func (x *Cycle) Reset() {
	*x = Cycle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_message_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cycle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cycle) ProtoMessage() {}

func (x *Cycle) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cycle.ProtoReflect.Descriptor instead.
func (*Cycle) Descriptor() ([]byte, []int) {
	return file_proto_message_service_proto_rawDescGZIP(), []int{19}
}

func (x *Cycle) GetDurationS() uint32 {
	if x != nil {
		return x.DurationS
	}
	return 0
}

func (x *Cycle) GetRemainingS() uint32 {
	if x != nil {
		return x.RemainingS
	}
	return 0
}

func (x *Cycle) GetLastPower() uint32 {
	if x != nil {
		return x.LastPower
	}
	return 0
}

type Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Indication bool   `protobuf:"varint,1,opt,name=indication,proto3" json:"indication,omitempty"`
	DurationS  uint32 `protobuf:"varint,2,opt,name=duration_s,json=durationS,proto3" json:"duration_s,omitempty"`
}

func (x *Config) Reset() {
	*x = Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_message_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_proto_message_service_proto_rawDescGZIP(), []int{20}
}

func (x *Config) GetIndication() bool {
	if x != nil {
		return x.Indication
	}
	return false
}

func (x *Config) GetDurationS() uint32 {
	if x != nil {
		return x.DurationS
	}
	return 0
}

type LastCycleResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result uint32 `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *LastCycleResult) Reset() {
	*x = LastCycleResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_message_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LastCycleResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LastCycleResult) ProtoMessage() {}

func (x *LastCycleResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LastCycleResult.ProtoReflect.Descriptor instead.
func (*LastCycleResult) Descriptor() ([]byte, []int) {
	return file_proto_message_service_proto_rawDescGZIP(), []int{21}
}

func (x *LastCycleResult) GetResult() uint32 {
	if x != nil {
		return x.Result
	}
	return 0
}

type ExtendedColorZone struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ZonesCount  uint32  `protobuf:"varint,1,opt,name=zones_count,json=zonesCount,proto3" json:"zones_count,omitempty"`
	ZoneIndex   uint32  `protobuf:"varint,2,opt,name=zone_index,json=zoneIndex,proto3" json:"zone_index,omitempty"`
	ColorsCount uint32  `protobuf:"varint,3,opt,name=colors_count,json=colorsCount,proto3" json:"colors_count,omitempty"`
	Colors      []*HSBK `protobuf:"bytes,4,rep,name=colors,proto3" json:"colors,omitempty"`
}

func (x *ExtendedColorZone) Reset() {
	*x = ExtendedColorZone{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_message_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExtendedColorZone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtendedColorZone) ProtoMessage() {}

func (x *ExtendedColorZone) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtendedColorZone.ProtoReflect.Descriptor instead.
func (*ExtendedColorZone) Descriptor() ([]byte, []int) {
	return file_proto_message_service_proto_rawDescGZIP(), []int{22}
}

func (x *ExtendedColorZone) GetZonesCount() uint32 {
	if x != nil {
		return x.ZonesCount
	}
	return 0
}

func (x *ExtendedColorZone) GetZoneIndex() uint32 {
	if x != nil {
		return x.ZoneIndex
	}
	return 0
}

func (x *ExtendedColorZone) GetColorsCount() uint32 {
	if x != nil {
		return x.ColorsCount
	}
	return 0
}

func (x *ExtendedColorZone) GetColors() []*HSBK {
	if x != nil {
		return x.Colors
	}
	return nil
}

type Relay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RPower *RPower `protobuf:"bytes,1,opt,name=r_power,json=rPower,proto3" json:"r_power,omitempty"`
}

func (x *Relay) Reset() {
	*x = Relay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_message_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Relay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Relay) ProtoMessage() {}

func (x *Relay) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Relay.ProtoReflect.Descriptor instead.
func (*Relay) Descriptor() ([]byte, []int) {
	return file_proto_message_service_proto_rawDescGZIP(), []int{23}
}

func (x *Relay) GetRPower() *RPower {
	if x != nil {
		return x.RPower
	}
	return nil
}

type RPower struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RelayIndex uint32 `protobuf:"varint,1,opt,name=relay_index,json=relayIndex,proto3" json:"relay_index,omitempty"`
	Level      uint32 `protobuf:"varint,2,opt,name=level,proto3" json:"level,omitempty"`
}

func (x *RPower) Reset() {
	*x = RPower{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_message_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RPower) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RPower) ProtoMessage() {}

func (x *RPower) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RPower.ProtoReflect.Descriptor instead.
func (*RPower) Descriptor() ([]byte, []int) {
	return file_proto_message_service_proto_rawDescGZIP(), []int{24}
}

func (x *RPower) GetRelayIndex() uint32 {
	if x != nil {
		return x.RelayIndex
	}
	return 0
}

func (x *RPower) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

type Tile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceChain        *DeviceChain        `protobuf:"bytes,1,opt,name=device_chain,json=deviceChain,proto3" json:"device_chain,omitempty"`
	Tile_64            *Tile64             `protobuf:"bytes,2,opt,name=tile_64,json=tile64,proto3" json:"tile_64,omitempty"`
	TileEffect         *TileEffect         `protobuf:"bytes,3,opt,name=tile_effect,json=tileEffect,proto3" json:"tile_effect,omitempty"`
	SensorAmbientLight *SensorAmbientLight `protobuf:"bytes,4,opt,name=sensor_ambient_light,json=sensorAmbientLight,proto3" json:"sensor_ambient_light,omitempty"`
}

func (x *Tile) Reset() {
	*x = Tile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_message_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tile) ProtoMessage() {}

func (x *Tile) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tile.ProtoReflect.Descriptor instead.
func (*Tile) Descriptor() ([]byte, []int) {
	return file_proto_message_service_proto_rawDescGZIP(), []int{25}
}

func (x *Tile) GetDeviceChain() *DeviceChain {
	if x != nil {
		return x.DeviceChain
	}
	return nil
}

func (x *Tile) GetTile_64() *Tile64 {
	if x != nil {
		return x.Tile_64
	}
	return nil
}

func (x *Tile) GetTileEffect() *TileEffect {
	if x != nil {
		return x.TileEffect
	}
	return nil
}

func (x *Tile) GetSensorAmbientLight() *SensorAmbientLight {
	if x != nil {
		return x.SensorAmbientLight
	}
	return nil
}

type DeviceChain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartIndex       uint32         `protobuf:"varint,1,opt,name=start_index,json=startIndex,proto3" json:"start_index,omitempty"`
	TileDevices      []*TileDevices `protobuf:"bytes,2,rep,name=tile_devices,json=tileDevices,proto3" json:"tile_devices,omitempty"`
	TileDevicesCount uint32         `protobuf:"varint,3,opt,name=tile_devices_count,json=tileDevicesCount,proto3" json:"tile_devices_count,omitempty"`
}

func (x *DeviceChain) Reset() {
	*x = DeviceChain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_message_service_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceChain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceChain) ProtoMessage() {}

func (x *DeviceChain) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_service_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceChain.ProtoReflect.Descriptor instead.
func (*DeviceChain) Descriptor() ([]byte, []int) {
	return file_proto_message_service_proto_rawDescGZIP(), []int{26}
}

func (x *DeviceChain) GetStartIndex() uint32 {
	if x != nil {
		return x.StartIndex
	}
	return 0
}

func (x *DeviceChain) GetTileDevices() []*TileDevices {
	if x != nil {
		return x.TileDevices
	}
	return nil
}

func (x *DeviceChain) GetTileDevicesCount() uint32 {
	if x != nil {
		return x.TileDevicesCount
	}
	return 0
}

type TileDevices struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccelMeasX           uint32   `protobuf:"varint,1,opt,name=accel_meas_x,json=accelMeasX,proto3" json:"accel_meas_x,omitempty"`
	AccelMeasY           uint32   `protobuf:"varint,2,opt,name=accel_meas_y,json=accelMeasY,proto3" json:"accel_meas_y,omitempty"`
	AccelMeasZ           uint32   `protobuf:"varint,3,opt,name=accel_meas_z,json=accelMeasZ,proto3" json:"accel_meas_z,omitempty"`
	Reserved2            []uint32 `protobuf:"varint,4,rep,packed,name=reserved2,proto3" json:"reserved2,omitempty"`
	UserX                uint32   `protobuf:"varint,5,opt,name=user_x,json=userX,proto3" json:"user_x,omitempty"`
	UserY                uint32   `protobuf:"varint,6,opt,name=user_y,json=userY,proto3" json:"user_y,omitempty"`
	Width                uint32   `protobuf:"varint,7,opt,name=width,proto3" json:"width,omitempty"`
	Height               uint32   `protobuf:"varint,8,opt,name=height,proto3" json:"height,omitempty"`
	Reserved7            []uint32 `protobuf:"varint,9,rep,packed,name=reserved7,proto3" json:"reserved7,omitempty"`
	DeviceVersionVendor  uint32   `protobuf:"varint,10,opt,name=device_version_vendor,json=deviceVersionVendor,proto3" json:"device_version_vendor,omitempty"`
	DeviceVersionProduct uint32   `protobuf:"varint,11,opt,name=device_version_product,json=deviceVersionProduct,proto3" json:"device_version_product,omitempty"`
	Reserved4            []uint32 `protobuf:"varint,12,rep,packed,name=reserved4,proto3" json:"reserved4,omitempty"`
	FirmwareBuild        uint64   `protobuf:"varint,13,opt,name=firmware_build,json=firmwareBuild,proto3" json:"firmware_build,omitempty"`
	Reserved8            []uint32 `protobuf:"varint,14,rep,packed,name=reserved8,proto3" json:"reserved8,omitempty"`
	FirmwareVersionMinor uint32   `protobuf:"varint,15,opt,name=firmware_version_minor,json=firmwareVersionMinor,proto3" json:"firmware_version_minor,omitempty"`
	FirmwareVersionMajor uint32   `protobuf:"varint,16,opt,name=firmware_version_major,json=firmwareVersionMajor,proto3" json:"firmware_version_major,omitempty"`
	Reserved10           []uint32 `protobuf:"varint,17,rep,packed,name=reserved10,proto3" json:"reserved10,omitempty"`
}

func (x *TileDevices) Reset() {
	*x = TileDevices{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_message_service_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TileDevices) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TileDevices) ProtoMessage() {}

func (x *TileDevices) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_service_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TileDevices.ProtoReflect.Descriptor instead.
func (*TileDevices) Descriptor() ([]byte, []int) {
	return file_proto_message_service_proto_rawDescGZIP(), []int{27}
}

func (x *TileDevices) GetAccelMeasX() uint32 {
	if x != nil {
		return x.AccelMeasX
	}
	return 0
}

func (x *TileDevices) GetAccelMeasY() uint32 {
	if x != nil {
		return x.AccelMeasY
	}
	return 0
}

func (x *TileDevices) GetAccelMeasZ() uint32 {
	if x != nil {
		return x.AccelMeasZ
	}
	return 0
}

func (x *TileDevices) GetReserved2() []uint32 {
	if x != nil {
		return x.Reserved2
	}
	return nil
}

func (x *TileDevices) GetUserX() uint32 {
	if x != nil {
		return x.UserX
	}
	return 0
}

func (x *TileDevices) GetUserY() uint32 {
	if x != nil {
		return x.UserY
	}
	return 0
}

func (x *TileDevices) GetWidth() uint32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *TileDevices) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *TileDevices) GetReserved7() []uint32 {
	if x != nil {
		return x.Reserved7
	}
	return nil
}

func (x *TileDevices) GetDeviceVersionVendor() uint32 {
	if x != nil {
		return x.DeviceVersionVendor
	}
	return 0
}

func (x *TileDevices) GetDeviceVersionProduct() uint32 {
	if x != nil {
		return x.DeviceVersionProduct
	}
	return 0
}

func (x *TileDevices) GetReserved4() []uint32 {
	if x != nil {
		return x.Reserved4
	}
	return nil
}

func (x *TileDevices) GetFirmwareBuild() uint64 {
	if x != nil {
		return x.FirmwareBuild
	}
	return 0
}

func (x *TileDevices) GetReserved8() []uint32 {
	if x != nil {
		return x.Reserved8
	}
	return nil
}

func (x *TileDevices) GetFirmwareVersionMinor() uint32 {
	if x != nil {
		return x.FirmwareVersionMinor
	}
	return 0
}

func (x *TileDevices) GetFirmwareVersionMajor() uint32 {
	if x != nil {
		return x.FirmwareVersionMajor
	}
	return 0
}

func (x *TileDevices) GetReserved10() []uint32 {
	if x != nil {
		return x.Reserved10
	}
	return nil
}

type Tile64 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TileIndex uint32  `protobuf:"varint,1,opt,name=tile_index,json=tileIndex,proto3" json:"tile_index,omitempty"`
	X         uint32  `protobuf:"varint,2,opt,name=x,proto3" json:"x,omitempty"`
	Y         uint32  `protobuf:"varint,3,opt,name=y,proto3" json:"y,omitempty"`
	Width     uint32  `protobuf:"varint,4,opt,name=width,proto3" json:"width,omitempty"`
	Colors    []*HSBK `protobuf:"bytes,5,rep,name=colors,proto3" json:"colors,omitempty"`
}

func (x *Tile64) Reset() {
	*x = Tile64{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_message_service_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tile64) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tile64) ProtoMessage() {}

func (x *Tile64) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_service_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tile64.ProtoReflect.Descriptor instead.
func (*Tile64) Descriptor() ([]byte, []int) {
	return file_proto_message_service_proto_rawDescGZIP(), []int{28}
}

func (x *Tile64) GetTileIndex() uint32 {
	if x != nil {
		return x.TileIndex
	}
	return 0
}

func (x *Tile64) GetX() uint32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Tile64) GetY() uint32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *Tile64) GetWidth() uint32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Tile64) GetColors() []*HSBK {
	if x != nil {
		return x.Colors
	}
	return nil
}

type TileEffect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Instanceid   uint32   `protobuf:"varint,1,opt,name=instanceid,proto3" json:"instanceid,omitempty"`
	Type         uint32   `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	Speed        uint32   `protobuf:"varint,3,opt,name=speed,proto3" json:"speed,omitempty"`
	Duration     uint64   `protobuf:"varint,4,opt,name=duration,proto3" json:"duration,omitempty"`
	Parameters   []uint32 `protobuf:"varint,5,rep,packed,name=parameters,proto3" json:"parameters,omitempty"`
	PaletteCount uint32   `protobuf:"varint,6,opt,name=palette_count,json=paletteCount,proto3" json:"palette_count,omitempty"`
	Palette      []*HSBK  `protobuf:"bytes,7,rep,name=palette,proto3" json:"palette,omitempty"`
}

func (x *TileEffect) Reset() {
	*x = TileEffect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_message_service_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TileEffect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TileEffect) ProtoMessage() {}

func (x *TileEffect) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_service_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TileEffect.ProtoReflect.Descriptor instead.
func (*TileEffect) Descriptor() ([]byte, []int) {
	return file_proto_message_service_proto_rawDescGZIP(), []int{29}
}

func (x *TileEffect) GetInstanceid() uint32 {
	if x != nil {
		return x.Instanceid
	}
	return 0
}

func (x *TileEffect) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *TileEffect) GetSpeed() uint32 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *TileEffect) GetDuration() uint64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *TileEffect) GetParameters() []uint32 {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *TileEffect) GetPaletteCount() uint32 {
	if x != nil {
		return x.PaletteCount
	}
	return 0
}

func (x *TileEffect) GetPalette() []*HSBK {
	if x != nil {
		return x.Palette
	}
	return nil
}

type SensorAmbientLight struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lux []uint32 `protobuf:"varint,1,rep,packed,name=lux,proto3" json:"lux,omitempty"`
}

func (x *SensorAmbientLight) Reset() {
	*x = SensorAmbientLight{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_message_service_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SensorAmbientLight) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SensorAmbientLight) ProtoMessage() {}

func (x *SensorAmbientLight) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_service_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SensorAmbientLight.ProtoReflect.Descriptor instead.
func (*SensorAmbientLight) Descriptor() ([]byte, []int) {
	return file_proto_message_service_proto_rawDescGZIP(), []int{30}
}

func (x *SensorAmbientLight) GetLux() []uint32 {
	if x != nil {
		return x.Lux
	}
	return nil
}

type GetDevicesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetDevicesRequest) Reset() {
	*x = GetDevicesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_message_service_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDevicesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDevicesRequest) ProtoMessage() {}

func (x *GetDevicesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_service_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDevicesRequest.ProtoReflect.Descriptor instead.
func (*GetDevicesRequest) Descriptor() ([]byte, []int) {
	return file_proto_message_service_proto_rawDescGZIP(), []int{31}
}

type GetDevicesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Locations map[string]*LocationMap `protobuf:"bytes,1,rep,name=locations,proto3" json:"locations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetDevicesResponse) Reset() {
	*x = GetDevicesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_message_service_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDevicesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDevicesResponse) ProtoMessage() {}

func (x *GetDevicesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_service_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDevicesResponse.ProtoReflect.Descriptor instead.
func (*GetDevicesResponse) Descriptor() ([]byte, []int) {
	return file_proto_message_service_proto_rawDescGZIP(), []int{32}
}

func (x *GetDevicesResponse) GetLocations() map[string]*LocationMap {
	if x != nil {
		return x.Locations
	}
	return nil
}

type SetLocationLabelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocationID string `protobuf:"bytes,1,opt,name=locationID,proto3" json:"locationID,omitempty"`
	NewLabel   string `protobuf:"bytes,2,opt,name=newLabel,proto3" json:"newLabel,omitempty"`
}

func (x *SetLocationLabelRequest) Reset() {
	*x = SetLocationLabelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_message_service_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetLocationLabelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetLocationLabelRequest) ProtoMessage() {}

func (x *SetLocationLabelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_service_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetLocationLabelRequest.ProtoReflect.Descriptor instead.
func (*SetLocationLabelRequest) Descriptor() ([]byte, []int) {
	return file_proto_message_service_proto_rawDescGZIP(), []int{33}
}

func (x *SetLocationLabelRequest) GetLocationID() string {
	if x != nil {
		return x.LocationID
	}
	return ""
}

func (x *SetLocationLabelRequest) GetNewLabel() string {
	if x != nil {
		return x.NewLabel
	}
	return ""
}

type SetLocationLabelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetLocationLabelResponse) Reset() {
	*x = SetLocationLabelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_message_service_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetLocationLabelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetLocationLabelResponse) ProtoMessage() {}

func (x *SetLocationLabelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_service_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetLocationLabelResponse.ProtoReflect.Descriptor instead.
func (*SetLocationLabelResponse) Descriptor() ([]byte, []int) {
	return file_proto_message_service_proto_rawDescGZIP(), []int{34}
}

type SetGroupLabelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID  string `protobuf:"bytes,1,opt,name=groupID,proto3" json:"groupID,omitempty"`
	NewLabel string `protobuf:"bytes,2,opt,name=newLabel,proto3" json:"newLabel,omitempty"`
}

func (x *SetGroupLabelRequest) Reset() {
	*x = SetGroupLabelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_message_service_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetGroupLabelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetGroupLabelRequest) ProtoMessage() {}

func (x *SetGroupLabelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_service_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetGroupLabelRequest.ProtoReflect.Descriptor instead.
func (*SetGroupLabelRequest) Descriptor() ([]byte, []int) {
	return file_proto_message_service_proto_rawDescGZIP(), []int{35}
}

func (x *SetGroupLabelRequest) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *SetGroupLabelRequest) GetNewLabel() string {
	if x != nil {
		return x.NewLabel
	}
	return ""
}

type SetGroupLabelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetGroupLabelResponse) Reset() {
	*x = SetGroupLabelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_message_service_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetGroupLabelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetGroupLabelResponse) ProtoMessage() {}

func (x *SetGroupLabelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_service_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetGroupLabelResponse.ProtoReflect.Descriptor instead.
func (*SetGroupLabelResponse) Descriptor() ([]byte, []int) {
	return file_proto_message_service_proto_rawDescGZIP(), []int{36}
}

type SetDeviceLabelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceID uint64 `protobuf:"varint,1,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	NewLabel string `protobuf:"bytes,2,opt,name=newLabel,proto3" json:"newLabel,omitempty"`
}

func (x *SetDeviceLabelRequest) Reset() {
	*x = SetDeviceLabelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_message_service_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetDeviceLabelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDeviceLabelRequest) ProtoMessage() {}

func (x *SetDeviceLabelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_service_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDeviceLabelRequest.ProtoReflect.Descriptor instead.
func (*SetDeviceLabelRequest) Descriptor() ([]byte, []int) {
	return file_proto_message_service_proto_rawDescGZIP(), []int{37}
}

func (x *SetDeviceLabelRequest) GetDeviceID() uint64 {
	if x != nil {
		return x.DeviceID
	}
	return 0
}

func (x *SetDeviceLabelRequest) GetNewLabel() string {
	if x != nil {
		return x.NewLabel
	}
	return ""
}

type SetDeviceLabelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetDeviceLabelResponse) Reset() {
	*x = SetDeviceLabelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_message_service_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetDeviceLabelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDeviceLabelResponse) ProtoMessage() {}

func (x *SetDeviceLabelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_service_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDeviceLabelResponse.ProtoReflect.Descriptor instead.
func (*SetDeviceLabelResponse) Descriptor() ([]byte, []int) {
	return file_proto_message_service_proto_rawDescGZIP(), []int{38}
}

type SetColorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Colors map[uint64]*HSBK `protobuf:"bytes,1,rep,name=colors,proto3" json:"colors,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SetColorRequest) Reset() {
	*x = SetColorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_message_service_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetColorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetColorRequest) ProtoMessage() {}

func (x *SetColorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_service_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetColorRequest.ProtoReflect.Descriptor instead.
func (*SetColorRequest) Descriptor() ([]byte, []int) {
	return file_proto_message_service_proto_rawDescGZIP(), []int{39}
}

func (x *SetColorRequest) GetColors() map[uint64]*HSBK {
	if x != nil {
		return x.Colors
	}
	return nil
}

type SetColorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetColorResponse) Reset() {
	*x = SetColorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_message_service_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetColorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetColorResponse) ProtoMessage() {}

func (x *SetColorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_service_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetColorResponse.ProtoReflect.Descriptor instead.
func (*SetColorResponse) Descriptor() ([]byte, []int) {
	return file_proto_message_service_proto_rawDescGZIP(), []int{40}
}

type SetPowerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Powers map[uint64]bool `protobuf:"bytes,1,rep,name=powers,proto3" json:"powers,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *SetPowerRequest) Reset() {
	*x = SetPowerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_message_service_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPowerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPowerRequest) ProtoMessage() {}

func (x *SetPowerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_service_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPowerRequest.ProtoReflect.Descriptor instead.
func (*SetPowerRequest) Descriptor() ([]byte, []int) {
	return file_proto_message_service_proto_rawDescGZIP(), []int{41}
}

func (x *SetPowerRequest) GetPowers() map[uint64]bool {
	if x != nil {
		return x.Powers
	}
	return nil
}

type SetPowerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetPowerResponse) Reset() {
	*x = SetPowerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_message_service_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPowerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPowerResponse) ProtoMessage() {}

func (x *SetPowerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_service_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPowerResponse.ProtoReflect.Descriptor instead.
func (*SetPowerResponse) Descriptor() ([]byte, []int) {
	return file_proto_message_service_proto_rawDescGZIP(), []int{42}
}

type StrobeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceIDs []uint64 `protobuf:"varint,1,rep,packed,name=deviceIDs,proto3" json:"deviceIDs,omitempty"`
	Speed     float32  `protobuf:"fixed32,2,opt,name=speed,proto3" json:"speed,omitempty"`
	TurnOn    bool     `protobuf:"varint,3,opt,name=turnOn,proto3" json:"turnOn,omitempty"`
}

func (x *StrobeRequest) Reset() {
	*x = StrobeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_message_service_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StrobeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StrobeRequest) ProtoMessage() {}

func (x *StrobeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_service_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StrobeRequest.ProtoReflect.Descriptor instead.
func (*StrobeRequest) Descriptor() ([]byte, []int) {
	return file_proto_message_service_proto_rawDescGZIP(), []int{43}
}

func (x *StrobeRequest) GetDeviceIDs() []uint64 {
	if x != nil {
		return x.DeviceIDs
	}
	return nil
}

func (x *StrobeRequest) GetSpeed() float32 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *StrobeRequest) GetTurnOn() bool {
	if x != nil {
		return x.TurnOn
	}
	return false
}

type StrobeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StrobeResponse) Reset() {
	*x = StrobeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_message_service_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StrobeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StrobeResponse) ProtoMessage() {}

func (x *StrobeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_service_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StrobeResponse.ProtoReflect.Descriptor instead.
func (*StrobeResponse) Descriptor() ([]byte, []int) {
	return file_proto_message_service_proto_rawDescGZIP(), []int{44}
}

type ColorCycleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceIDs []uint64 `protobuf:"varint,1,rep,packed,name=deviceIDs,proto3" json:"deviceIDs,omitempty"`
	Speed     float32  `protobuf:"fixed32,2,opt,name=speed,proto3" json:"speed,omitempty"`
	TurnOn    bool     `protobuf:"varint,3,opt,name=turnOn,proto3" json:"turnOn,omitempty"`
}

func (x *ColorCycleRequest) Reset() {
	*x = ColorCycleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_message_service_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ColorCycleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColorCycleRequest) ProtoMessage() {}

func (x *ColorCycleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_service_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColorCycleRequest.ProtoReflect.Descriptor instead.
func (*ColorCycleRequest) Descriptor() ([]byte, []int) {
	return file_proto_message_service_proto_rawDescGZIP(), []int{45}
}

func (x *ColorCycleRequest) GetDeviceIDs() []uint64 {
	if x != nil {
		return x.DeviceIDs
	}
	return nil
}

func (x *ColorCycleRequest) GetSpeed() float32 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *ColorCycleRequest) GetTurnOn() bool {
	if x != nil {
		return x.TurnOn
	}
	return false
}

type ColorCycleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ColorCycleResponse) Reset() {
	*x = ColorCycleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_message_service_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ColorCycleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColorCycleResponse) ProtoMessage() {}

func (x *ColorCycleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_service_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColorCycleResponse.ProtoReflect.Descriptor instead.
func (*ColorCycleResponse) Descriptor() ([]byte, []int) {
	return file_proto_message_service_proto_rawDescGZIP(), []int{46}
}

type TwinkleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceColors map[uint64]*HSBK `protobuf:"bytes,1,rep,name=deviceColors,proto3" json:"deviceColors,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Speed        float32          `protobuf:"fixed32,2,opt,name=speed,proto3" json:"speed,omitempty"`
	Intensity    float32          `protobuf:"fixed32,3,opt,name=intensity,proto3" json:"intensity,omitempty"`
	TurnOn       bool             `protobuf:"varint,4,opt,name=turnOn,proto3" json:"turnOn,omitempty"`
}

func (x *TwinkleRequest) Reset() {
	*x = TwinkleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_message_service_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TwinkleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TwinkleRequest) ProtoMessage() {}

func (x *TwinkleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_service_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TwinkleRequest.ProtoReflect.Descriptor instead.
func (*TwinkleRequest) Descriptor() ([]byte, []int) {
	return file_proto_message_service_proto_rawDescGZIP(), []int{47}
}

func (x *TwinkleRequest) GetDeviceColors() map[uint64]*HSBK {
	if x != nil {
		return x.DeviceColors
	}
	return nil
}

func (x *TwinkleRequest) GetSpeed() float32 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *TwinkleRequest) GetIntensity() float32 {
	if x != nil {
		return x.Intensity
	}
	return 0
}

func (x *TwinkleRequest) GetTurnOn() bool {
	if x != nil {
		return x.TurnOn
	}
	return false
}

type TwinkleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TwinkleResponse) Reset() {
	*x = TwinkleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_message_service_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TwinkleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TwinkleResponse) ProtoMessage() {}

func (x *TwinkleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_service_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TwinkleResponse.ProtoReflect.Descriptor instead.
func (*TwinkleResponse) Descriptor() ([]byte, []int) {
	return file_proto_message_service_proto_rawDescGZIP(), []int{48}
}

type VisualizerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceIDs []uint64 `protobuf:"varint,1,rep,packed,name=deviceIDs,proto3" json:"deviceIDs,omitempty"`
	Variation float32  `protobuf:"fixed32,2,opt,name=variation,proto3" json:"variation,omitempty"`
	TurnOn    bool     `protobuf:"varint,3,opt,name=turnOn,proto3" json:"turnOn,omitempty"`
}

func (x *VisualizerRequest) Reset() {
	*x = VisualizerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_message_service_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VisualizerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VisualizerRequest) ProtoMessage() {}

func (x *VisualizerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_service_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VisualizerRequest.ProtoReflect.Descriptor instead.
func (*VisualizerRequest) Descriptor() ([]byte, []int) {
	return file_proto_message_service_proto_rawDescGZIP(), []int{49}
}

func (x *VisualizerRequest) GetDeviceIDs() []uint64 {
	if x != nil {
		return x.DeviceIDs
	}
	return nil
}

func (x *VisualizerRequest) GetVariation() float32 {
	if x != nil {
		return x.Variation
	}
	return 0
}

func (x *VisualizerRequest) GetTurnOn() bool {
	if x != nil {
		return x.TurnOn
	}
	return false
}

type VisualizerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *VisualizerResponse) Reset() {
	*x = VisualizerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_message_service_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VisualizerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VisualizerResponse) ProtoMessage() {}

func (x *VisualizerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_service_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VisualizerResponse.ProtoReflect.Descriptor instead.
func (*VisualizerResponse) Descriptor() ([]byte, []int) {
	return file_proto_message_service_proto_rawDescGZIP(), []int{50}
}

type TheaterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceIDs []uint64 `protobuf:"varint,1,rep,packed,name=deviceIDs,proto3" json:"deviceIDs,omitempty"`
	TurnOn    bool     `protobuf:"varint,2,opt,name=turnOn,proto3" json:"turnOn,omitempty"`
	Screen    int32    `protobuf:"varint,3,opt,name=screen,proto3" json:"screen,omitempty"`
}

func (x *TheaterRequest) Reset() {
	*x = TheaterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_message_service_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TheaterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TheaterRequest) ProtoMessage() {}

func (x *TheaterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_service_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TheaterRequest.ProtoReflect.Descriptor instead.
func (*TheaterRequest) Descriptor() ([]byte, []int) {
	return file_proto_message_service_proto_rawDescGZIP(), []int{51}
}

func (x *TheaterRequest) GetDeviceIDs() []uint64 {
	if x != nil {
		return x.DeviceIDs
	}
	return nil
}

func (x *TheaterRequest) GetTurnOn() bool {
	if x != nil {
		return x.TurnOn
	}
	return false
}

func (x *TheaterRequest) GetScreen() int32 {
	if x != nil {
		return x.Screen
	}
	return 0
}

type TheaterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TheaterResponse) Reset() {
	*x = TheaterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_message_service_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TheaterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TheaterResponse) ProtoMessage() {}

func (x *TheaterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_service_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TheaterResponse.ProtoReflect.Descriptor instead.
func (*TheaterResponse) Descriptor() ([]byte, []int) {
	return file_proto_message_service_proto_rawDescGZIP(), []int{52}
}

var File_proto_message_service_proto protoreflect.FileDescriptor

var file_proto_message_service_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc6, 0x05, 0x0a, 0x06, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x2d, 0x0a, 0x08, 0x66, 0x69, 0x72, 0x6d, 0x77,
	0x61, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x52, 0x08, 0x66, 0x69,
	0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x77, 0x69, 0x66, 0x69, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x57,
	0x69, 0x46, 0x69, 0x52, 0x04, 0x77, 0x69, 0x66, 0x69, 0x12, 0x24, 0x0a, 0x05, 0x70, 0x6f, 0x77,
	0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x52, 0x05, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x12,
	0x24, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x05,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x2a, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x21, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x12, 0x2a, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x12, 0x24, 0x0a, 0x05, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52,
	0x05, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x2d, 0x0a, 0x08, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x72,
	0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x49, 0x6e, 0x66, 0x72, 0x61, 0x72, 0x65, 0x64, 0x52, 0x08, 0x69, 0x6e, 0x66,
	0x72, 0x61, 0x72, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x03, 0x68, 0x65, 0x76, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x48, 0x45, 0x56,
	0x52, 0x03, 0x68, 0x65, 0x76, 0x12, 0x4a, 0x0a, 0x13, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65,
	0x64, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x78, 0x74,
	0x65, 0x6e, 0x64, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x11,
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5a, 0x6f, 0x6e,
	0x65, 0x12, 0x24, 0x0a, 0x05, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x79,
	0x52, 0x05, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x21, 0x0a, 0x04, 0x74, 0x69, 0x6c, 0x65, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x54, 0x69, 0x6c, 0x65, 0x52, 0x04, 0x74, 0x69, 0x6c, 0x65, 0x12, 0x2d, 0x0a, 0x08, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x05, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22,
	0x6a, 0x0a, 0x08, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x61, 0x70, 0x12, 0x29, 0x0a, 0x07, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x07, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x1d, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xca, 0x01, 0x0a, 0x0b,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x12, 0x38, 0x0a, 0x06, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x61,
	0x70, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x1a, 0x4c, 0x0a, 0x0b, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x61, 0x70, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x3c, 0x0a, 0x05, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x3f, 0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x6a, 0x0a, 0x08, 0x46, 0x69, 0x72, 0x6d, 0x77,
	0x61, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x05, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6e, 0x6f, 0x72, 0x12, 0x23,
	0x0a, 0x0d, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x61,
	0x6a, 0x6f, 0x72, 0x22, 0x5c, 0x0a, 0x04, 0x57, 0x69, 0x46, 0x69, 0x12, 0x25, 0x0a, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x57, 0x69, 0x66, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x12, 0x2d, 0x0a, 0x08, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x46,
	0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x52, 0x08, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72,
	0x65, 0x22, 0x1d, 0x0a, 0x05, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x22, 0x1d, 0x0a, 0x05, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x22,
	0x3b, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x65,
	0x6e, 0x64, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x76, 0x65, 0x6e, 0x64,
	0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x22, 0x22, 0x0a, 0x08,
	0x57, 0x69, 0x66, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x22, 0x4e, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x70,
	0x74, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x6f, 0x77, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x64, 0x6f, 0x77, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x22, 0x8c, 0x01, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x46,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x73, 0x12, 0x2c, 0x0a, 0x08, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x55, 0x70,
	0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x08, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x73, 0x22,
	0x64, 0x0a, 0x07, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61,
	0x6a, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6d, 0x61, 0x6a, 0x6f, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x12, 0x2d, 0x0a, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x08, 0x66, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x73, 0x22, 0xb8, 0x03, 0x0a, 0x08, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x68, 0x65, 0x76, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x03, 0x68, 0x65, 0x76, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x6d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6c, 0x61,
	0x79, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e,
	0x66, 0x72, 0x61, 0x72, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x6e,
	0x66, 0x72, 0x61, 0x72, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x7a,
	0x6f, 0x6e, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6d, 0x75, 0x6c, 0x74, 0x69,
	0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x09, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x10, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x61, 0x6e, 0x67,
	0x65, 0x12, 0x2d, 0x0a, 0x12, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x6d, 0x75,
	0x6c, 0x74, 0x69, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x65,
	0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x7a, 0x6f, 0x6e, 0x65,
	0x12, 0x4a, 0x0a, 0x13, 0x6d, 0x69, 0x6e, 0x5f, 0x65, 0x78, 0x74, 0x5f, 0x6d, 0x7a, 0x5f, 0x66,
	0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x10, 0x6d, 0x69, 0x6e, 0x45,
	0x78, 0x74, 0x4d, 0x7a, 0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x12, 0x42, 0x0a, 0x1e,
	0x6d, 0x69, 0x6e, 0x5f, 0x65, 0x78, 0x74, 0x5f, 0x6d, 0x7a, 0x5f, 0x66, 0x69, 0x72, 0x6d, 0x77,
	0x61, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x0c,
	0x20, 0x03, 0x28, 0x05, 0x52, 0x1a, 0x6d, 0x69, 0x6e, 0x45, 0x78, 0x74, 0x4d, 0x7a, 0x46, 0x69,
	0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73,
	0x22, 0x9d, 0x01, 0x0a, 0x05, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x68, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x68, 0x75, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x73, 0x61, 0x74, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x73, 0x61, 0x74, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a,
	0x62, 0x72, 0x69, 0x67, 0x68, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x62, 0x72, 0x69, 0x67, 0x68, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x6b, 0x65, 0x6c, 0x76, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6b, 0x65,
	0x6c, 0x76, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x22, 0x70, 0x0a, 0x04, 0x48, 0x53, 0x42, 0x4b, 0x12, 0x10, 0x0a, 0x03, 0x68, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x68, 0x75, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x61,
	0x74, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x73, 0x61, 0x74, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x72,
	0x69, 0x67, 0x68, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x62, 0x72, 0x69, 0x67, 0x68, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6b, 0x65,
	0x6c, 0x76, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6b, 0x65, 0x6c, 0x76,
	0x69, 0x6e, 0x22, 0x2a, 0x0a, 0x08, 0x49, 0x6e, 0x66, 0x72, 0x61, 0x72, 0x65, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x62, 0x72, 0x69, 0x67, 0x68, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x62, 0x72, 0x69, 0x67, 0x68, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x22, 0x9a,
	0x01, 0x0a, 0x03, 0x48, 0x45, 0x56, 0x12, 0x24, 0x0a, 0x05, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x43, 0x79, 0x63, 0x6c, 0x65, 0x52, 0x05, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x12, 0x27, 0x0a, 0x06,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x44, 0x0a, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x63, 0x79,
	0x63, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x61, 0x73, 0x74, 0x43,
	0x79, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74,
	0x43, 0x79, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x66, 0x0a, 0x05, 0x43,
	0x79, 0x63, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x5f, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e,
	0x69, 0x6e, 0x67, 0x53, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x6f, 0x77,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x6f,
	0x77, 0x65, 0x72, 0x22, 0x47, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1e, 0x0a,
	0x0a, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a,
	0x0a, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x22, 0x29, 0x0a, 0x0f,
	0x4c, 0x61, 0x73, 0x74, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x9d, 0x01, 0x0a, 0x11, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x64, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5a, 0x6f, 0x6e, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x7a, 0x6f, 0x6e, 0x65, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x7a, 0x6f, 0x6e, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x21, 0x0a,
	0x0c, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0b, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x25, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x48, 0x53, 0x42, 0x4b, 0x52,
	0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x22, 0x31, 0x0a, 0x05, 0x52, 0x65, 0x6c, 0x61, 0x79,
	0x12, 0x28, 0x0a, 0x07, 0x72, 0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x50, 0x6f, 0x77,
	0x65, 0x72, 0x52, 0x06, 0x72, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x22, 0x3f, 0x0a, 0x06, 0x52, 0x50,
	0x6f, 0x77, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x72, 0x65, 0x6c, 0x61, 0x79,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0xee, 0x01, 0x0a, 0x04,
	0x54, 0x69, 0x6c, 0x65, 0x12, 0x37, 0x0a, 0x0c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e,
	0x52, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x28, 0x0a,
	0x07, 0x74, 0x69, 0x6c, 0x65, 0x5f, 0x36, 0x34, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x54, 0x69, 0x6c, 0x65, 0x36, 0x34, 0x52,
	0x06, 0x74, 0x69, 0x6c, 0x65, 0x36, 0x34, 0x12, 0x34, 0x0a, 0x0b, 0x74, 0x69, 0x6c, 0x65, 0x5f,
	0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x54, 0x69, 0x6c, 0x65, 0x45, 0x66, 0x66, 0x65, 0x63,
	0x74, 0x52, 0x0a, 0x74, 0x69, 0x6c, 0x65, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x12, 0x4d, 0x0a,
	0x14, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x5f, 0x61, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x41, 0x6d, 0x62, 0x69,
	0x65, 0x6e, 0x74, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x12, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72,
	0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x22, 0x95, 0x01, 0x0a,
	0x0b, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x37, 0x0a,
	0x0c, 0x74, 0x69, 0x6c, 0x65, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x54, 0x69,
	0x6c, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x0b, 0x74, 0x69, 0x6c, 0x65, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x69, 0x6c, 0x65, 0x5f, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x10, 0x74, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0xe4, 0x04, 0x0a, 0x0b, 0x54, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x5f, 0x6d, 0x65,
	0x61, 0x73, 0x5f, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65,
	0x6c, 0x4d, 0x65, 0x61, 0x73, 0x58, 0x12, 0x20, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x5f,
	0x6d, 0x65, 0x61, 0x73, 0x5f, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x63,
	0x63, 0x65, 0x6c, 0x4d, 0x65, 0x61, 0x73, 0x59, 0x12, 0x20, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65,
	0x6c, 0x5f, 0x6d, 0x65, 0x61, 0x73, 0x5f, 0x7a, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x61, 0x63, 0x63, 0x65, 0x6c, 0x4d, 0x65, 0x61, 0x73, 0x5a, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x32, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x09, 0x72,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x32, 0x12, 0x15, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x58, 0x12,
	0x15, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x75, 0x73, 0x65, 0x72, 0x59, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64,
	0x37, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x64, 0x37, 0x12, 0x32, 0x0a, 0x15, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x13, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x12, 0x34, 0x0a, 0x16, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x34, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0d, 0x52,
	0x09, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x34, 0x12, 0x25, 0x0a, 0x0e, 0x66, 0x69,
	0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0d, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x42, 0x75, 0x69, 0x6c,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x38, 0x18, 0x0e,
	0x20, 0x03, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x38, 0x12,
	0x34, 0x0a, 0x16, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x14, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x4d, 0x69, 0x6e, 0x6f, 0x72, 0x12, 0x34, 0x0a, 0x16, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72,
	0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x72,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x31, 0x30, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0d, 0x52,
	0x0a, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x31, 0x30, 0x22, 0x80, 0x01, 0x0a, 0x06,
	0x54, 0x69, 0x6c, 0x65, 0x36, 0x34, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x6c, 0x65, 0x5f, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x6c, 0x65,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x01,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x25, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x48, 0x53, 0x42, 0x4b, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x22, 0xe0,
	0x01, 0x0a, 0x0a, 0x54, 0x69, 0x6c, 0x65, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x61, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x70, 0x61, 0x6c, 0x65,
	0x74, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x07, 0x70, 0x61, 0x6c, 0x65,
	0x74, 0x74, 0x65, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x48, 0x53, 0x42, 0x4b, 0x52, 0x07, 0x70, 0x61, 0x6c, 0x65, 0x74, 0x74,
	0x65, 0x22, 0x26, 0x0a, 0x12, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x41, 0x6d, 0x62, 0x69, 0x65,
	0x6e, 0x74, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x75, 0x78, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0d, 0x52, 0x03, 0x6c, 0x75, 0x78, 0x22, 0x13, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xb2,
	0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a,
	0x52, 0x0a, 0x0e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x55, 0x0a, 0x17, 0x53, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1a,
	0x0a, 0x08, 0x6e, 0x65, 0x77, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6e, 0x65, 0x77, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x1a, 0x0a, 0x18, 0x53, 0x65,
	0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4c, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x65, 0x77, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x65, 0x77, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x22, 0x17, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4f, 0x0a,
	0x15, 0x53, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x65, 0x77, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x65, 0x77, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x18,
	0x0a, 0x16, 0x53, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x99, 0x01, 0x0a, 0x0f, 0x53, 0x65, 0x74,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x06,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x1a, 0x48, 0x0a, 0x0b, 0x43, 0x6f,
	0x6c, 0x6f, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x23, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x48, 0x53, 0x42, 0x4b, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x12, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x8a, 0x01, 0x0a, 0x0f, 0x53, 0x65, 0x74,
	0x50, 0x6f, 0x77, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x06,
	0x70, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x06, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x50, 0x6f,
	0x77, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x12, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x50, 0x6f, 0x77, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5b, 0x0a, 0x0d, 0x53, 0x74, 0x72,
	0x6f, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x09, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x65, 0x65,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x74, 0x75, 0x72, 0x6e, 0x4f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x74, 0x75, 0x72, 0x6e, 0x4f, 0x6e, 0x22, 0x10, 0x0a, 0x0e, 0x53, 0x74, 0x72, 0x6f, 0x62, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5f, 0x0a, 0x11, 0x43, 0x6f, 0x6c, 0x6f,
	0x72, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04,
	0x52, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x70, 0x65, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x73, 0x70, 0x65, 0x65,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x75, 0x72, 0x6e, 0x4f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x74, 0x75, 0x72, 0x6e, 0x4f, 0x6e, 0x22, 0x14, 0x0a, 0x12, 0x43, 0x6f, 0x6c,
	0x6f, 0x72, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0xfb, 0x01, 0x0a, 0x0e, 0x54, 0x77, 0x69, 0x6e, 0x6b, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x4d, 0x0a, 0x0c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6c, 0x6f,
	0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x54, 0x77, 0x69, 0x6e, 0x6b, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x69, 0x6e, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x75, 0x72, 0x6e, 0x4f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x74, 0x75, 0x72, 0x6e, 0x4f, 0x6e, 0x1a, 0x4e, 0x0a,
	0x11, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x23, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x48, 0x53,
	0x42, 0x4b, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x11, 0x0a,
	0x0f, 0x54, 0x77, 0x69, 0x6e, 0x6b, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x67, 0x0a, 0x11, 0x56, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x44, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x44, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x75, 0x72, 0x6e, 0x4f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x74, 0x75, 0x72, 0x6e, 0x4f, 0x6e, 0x22, 0x14, 0x0a, 0x12, 0x56, 0x69, 0x73,
	0x75, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x5e, 0x0a, 0x0e, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x04, 0x52, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x74, 0x75, 0x72, 0x6e, 0x4f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x74, 0x75, 0x72, 0x6e, 0x4f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x72, 0x65, 0x65,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x22,
	0x11, 0x0a, 0x0f, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x32, 0x99, 0x06, 0x0a, 0x0d, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x45, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x12, 0x1a, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x53,
	0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12,
	0x20, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x21, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x1d, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x1e, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x53, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x53, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x43, 0x6f,
	0x6c, 0x6f, 0x72, 0x12, 0x18, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x65,
	0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x50,
	0x6f, 0x77, 0x65, 0x72, 0x12, 0x18, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53,
	0x65, 0x74, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x6f, 0x77, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x06, 0x53, 0x74, 0x72,
	0x6f, 0x62, 0x65, 0x12, 0x16, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x74,
	0x72, 0x6f, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x6f, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0a, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x43, 0x79, 0x63,
	0x6c, 0x65, 0x12, 0x1a, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x6c,
	0x6f, 0x72, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x43, 0x79,
	0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x07, 0x54,
	0x77, 0x69, 0x6e, 0x6b, 0x6c, 0x65, 0x12, 0x17, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x54, 0x77, 0x69, 0x6e, 0x6b, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x18, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x54, 0x77, 0x69, 0x6e, 0x6b, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0a, 0x56, 0x69, 0x73,
	0x75, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x72, 0x12, 0x1a, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x56, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x56, 0x69,
	0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3c, 0x0a, 0x07, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x12, 0x17, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x54, 0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x54,
	0x68, 0x65, 0x61, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x1d,
	0x5a, 0x1b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x79, 0x61,
	0x6c, 0x32, 0x2f, 0x4c, 0x49, 0x46, 0x58, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_message_service_proto_rawDescOnce sync.Once
	file_proto_message_service_proto_rawDescData = file_proto_message_service_proto_rawDesc
)

func file_proto_message_service_proto_rawDescGZIP() []byte {
	file_proto_message_service_proto_rawDescOnce.Do(func() {
		file_proto_message_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_message_service_proto_rawDescData)
	})
	return file_proto_message_service_proto_rawDescData
}

var file_proto_message_service_proto_msgTypes = make([]protoimpl.MessageInfo, 58)
var file_proto_message_service_proto_goTypes = []interface{}{
	(*Device)(nil),                   // 0: message.Device
	(*GroupMap)(nil),                 // 1: message.GroupMap
	(*LocationMap)(nil),              // 2: message.LocationMap
	(*Group)(nil),                    // 3: message.Group
	(*Location)(nil),                 // 4: message.Location
	(*Firmware)(nil),                 // 5: message.Firmware
	(*WiFi)(nil),                     // 6: message.WiFi
	(*Power)(nil),                    // 7: message.Power
	(*Label)(nil),                    // 8: message.Label
	(*Version)(nil),                  // 9: message.Version
	(*WifiInfo)(nil),                 // 10: message.WifiInfo
	(*Info)(nil),                     // 11: message.Info
	(*Product)(nil),                  // 12: message.Product
	(*Upgrade)(nil),                  // 13: message.Upgrade
	(*Features)(nil),                 // 14: message.Features
	(*Light)(nil),                    // 15: message.Light
	(*HSBK)(nil),                     // 16: message.HSBK
	(*Infrared)(nil),                 // 17: message.Infrared
	(*HEV)(nil),                      // 18: message.HEV
	(*Cycle)(nil),                    // 19: message.Cycle
	(*Config)(nil),                   // 20: message.Config
	(*LastCycleResult)(nil),          // 21: message.LastCycleResult
	(*ExtendedColorZone)(nil),        // 22: message.ExtendedColorZone
	(*Relay)(nil),                    // 23: message.Relay
	(*RPower)(nil),                   // 24: message.RPower
	(*Tile)(nil),                     // 25: message.Tile
	(*DeviceChain)(nil),              // 26: message.DeviceChain
	(*TileDevices)(nil),              // 27: message.TileDevices
	(*Tile64)(nil),                   // 28: message.Tile64
	(*TileEffect)(nil),               // 29: message.TileEffect
	(*SensorAmbientLight)(nil),       // 30: message.SensorAmbientLight
	(*GetDevicesRequest)(nil),        // 31: message.GetDevicesRequest
	(*GetDevicesResponse)(nil),       // 32: message.GetDevicesResponse
	(*SetLocationLabelRequest)(nil),  // 33: message.SetLocationLabelRequest
	(*SetLocationLabelResponse)(nil), // 34: message.SetLocationLabelResponse
	(*SetGroupLabelRequest)(nil),     // 35: message.SetGroupLabelRequest
	(*SetGroupLabelResponse)(nil),    // 36: message.SetGroupLabelResponse
	(*SetDeviceLabelRequest)(nil),    // 37: message.SetDeviceLabelRequest
	(*SetDeviceLabelResponse)(nil),   // 38: message.SetDeviceLabelResponse
	(*SetColorRequest)(nil),          // 39: message.SetColorRequest
	(*SetColorResponse)(nil),         // 40: message.SetColorResponse
	(*SetPowerRequest)(nil),          // 41: message.SetPowerRequest
	(*SetPowerResponse)(nil),         // 42: message.SetPowerResponse
	(*StrobeRequest)(nil),            // 43: message.StrobeRequest
	(*StrobeResponse)(nil),           // 44: message.StrobeResponse
	(*ColorCycleRequest)(nil),        // 45: message.ColorCycleRequest
	(*ColorCycleResponse)(nil),       // 46: message.ColorCycleResponse
	(*TwinkleRequest)(nil),           // 47: message.TwinkleRequest
	(*TwinkleResponse)(nil),          // 48: message.TwinkleResponse
	(*VisualizerRequest)(nil),        // 49: message.VisualizerRequest
	(*VisualizerResponse)(nil),       // 50: message.VisualizerResponse
	(*TheaterRequest)(nil),           // 51: message.TheaterRequest
	(*TheaterResponse)(nil),          // 52: message.TheaterResponse
	nil,                              // 53: message.LocationMap.GroupsEntry
	nil,                              // 54: message.GetDevicesResponse.LocationsEntry
	nil,                              // 55: message.SetColorRequest.ColorsEntry
	nil,                              // 56: message.SetPowerRequest.PowersEntry
	nil,                              // 57: message.TwinkleRequest.DeviceColorsEntry
	(*wrapperspb.Int32Value)(nil),    // 58: google.protobuf.Int32Value
}
var file_proto_message_service_proto_depIdxs = []int32{
	5,  // 0: message.Device.firmware:type_name -> message.Firmware
	6,  // 1: message.Device.wifi:type_name -> message.WiFi
	7,  // 2: message.Device.power:type_name -> message.Power
	8,  // 3: message.Device.label:type_name -> message.Label
	9,  // 4: message.Device.version:type_name -> message.Version
	11, // 5: message.Device.info:type_name -> message.Info
	12, // 6: message.Device.product:type_name -> message.Product
	15, // 7: message.Device.light:type_name -> message.Light
	17, // 8: message.Device.infrared:type_name -> message.Infrared
	18, // 9: message.Device.hev:type_name -> message.HEV
	22, // 10: message.Device.extended_color_zone:type_name -> message.ExtendedColorZone
	23, // 11: message.Device.relay:type_name -> message.Relay
	25, // 12: message.Device.tile:type_name -> message.Tile
	4,  // 13: message.Device.location:type_name -> message.Location
	3,  // 14: message.Device.group:type_name -> message.Group
	0,  // 15: message.GroupMap.devices:type_name -> message.Device
	53, // 16: message.LocationMap.groups:type_name -> message.LocationMap.GroupsEntry
	10, // 17: message.WiFi.info:type_name -> message.WifiInfo
	5,  // 18: message.WiFi.firmware:type_name -> message.Firmware
	14, // 19: message.Product.features:type_name -> message.Features
	13, // 20: message.Product.upgrades:type_name -> message.Upgrade
	14, // 21: message.Upgrade.features:type_name -> message.Features
	58, // 22: message.Features.min_ext_mz_firmware:type_name -> google.protobuf.Int32Value
	19, // 23: message.HEV.cycle:type_name -> message.Cycle
	20, // 24: message.HEV.config:type_name -> message.Config
	21, // 25: message.HEV.last_cycle_result:type_name -> message.LastCycleResult
	16, // 26: message.ExtendedColorZone.colors:type_name -> message.HSBK
	24, // 27: message.Relay.r_power:type_name -> message.RPower
	26, // 28: message.Tile.device_chain:type_name -> message.DeviceChain
	28, // 29: message.Tile.tile_64:type_name -> message.Tile64
	29, // 30: message.Tile.tile_effect:type_name -> message.TileEffect
	30, // 31: message.Tile.sensor_ambient_light:type_name -> message.SensorAmbientLight
	27, // 32: message.DeviceChain.tile_devices:type_name -> message.TileDevices
	16, // 33: message.Tile64.colors:type_name -> message.HSBK
	16, // 34: message.TileEffect.palette:type_name -> message.HSBK
	54, // 35: message.GetDevicesResponse.locations:type_name -> message.GetDevicesResponse.LocationsEntry
	55, // 36: message.SetColorRequest.colors:type_name -> message.SetColorRequest.ColorsEntry
	56, // 37: message.SetPowerRequest.powers:type_name -> message.SetPowerRequest.PowersEntry
	57, // 38: message.TwinkleRequest.deviceColors:type_name -> message.TwinkleRequest.DeviceColorsEntry
	1,  // 39: message.LocationMap.GroupsEntry.value:type_name -> message.GroupMap
	2,  // 40: message.GetDevicesResponse.LocationsEntry.value:type_name -> message.LocationMap
	16, // 41: message.SetColorRequest.ColorsEntry.value:type_name -> message.HSBK
	16, // 42: message.TwinkleRequest.DeviceColorsEntry.value:type_name -> message.HSBK
	31, // 43: message.DeviceService.GetDevices:input_type -> message.GetDevicesRequest
	33, // 44: message.DeviceService.SetLocationLabel:input_type -> message.SetLocationLabelRequest
	35, // 45: message.DeviceService.SetGroupLabel:input_type -> message.SetGroupLabelRequest
	37, // 46: message.DeviceService.SetDeviceLabel:input_type -> message.SetDeviceLabelRequest
	39, // 47: message.DeviceService.SetColor:input_type -> message.SetColorRequest
	41, // 48: message.DeviceService.SetPower:input_type -> message.SetPowerRequest
	43, // 49: message.DeviceService.Strobe:input_type -> message.StrobeRequest
	45, // 50: message.DeviceService.ColorCycle:input_type -> message.ColorCycleRequest
	47, // 51: message.DeviceService.Twinkle:input_type -> message.TwinkleRequest
	49, // 52: message.DeviceService.Visualizer:input_type -> message.VisualizerRequest
	51, // 53: message.DeviceService.Theater:input_type -> message.TheaterRequest
	32, // 54: message.DeviceService.GetDevices:output_type -> message.GetDevicesResponse
	34, // 55: message.DeviceService.SetLocationLabel:output_type -> message.SetLocationLabelResponse
	36, // 56: message.DeviceService.SetGroupLabel:output_type -> message.SetGroupLabelResponse
	38, // 57: message.DeviceService.SetDeviceLabel:output_type -> message.SetDeviceLabelResponse
	40, // 58: message.DeviceService.SetColor:output_type -> message.SetColorResponse
	42, // 59: message.DeviceService.SetPower:output_type -> message.SetPowerResponse
	44, // 60: message.DeviceService.Strobe:output_type -> message.StrobeResponse
	46, // 61: message.DeviceService.ColorCycle:output_type -> message.ColorCycleResponse
	48, // 62: message.DeviceService.Twinkle:output_type -> message.TwinkleResponse
	50, // 63: message.DeviceService.Visualizer:output_type -> message.VisualizerResponse
	52, // 64: message.DeviceService.Theater:output_type -> message.TheaterResponse
	54, // [54:65] is the sub-list for method output_type
	43, // [43:54] is the sub-list for method input_type
	43, // [43:43] is the sub-list for extension type_name
	43, // [43:43] is the sub-list for extension extendee
	0,  // [0:43] is the sub-list for field type_name
}

func init() { file_proto_message_service_proto_init() }
func file_proto_message_service_proto_init() {
	if File_proto_message_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_message_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Device); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_message_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_message_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocationMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_message_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Group); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_message_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Location); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_message_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Firmware); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_message_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WiFi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_message_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Power); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_message_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Label); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_message_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Version); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_message_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WifiInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_message_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Info); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_message_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Product); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_message_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Upgrade); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_message_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Features); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_message_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Light); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_message_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HSBK); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_message_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Infrared); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_message_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HEV); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_message_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cycle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_message_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_message_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LastCycleResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_message_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExtendedColorZone); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_message_service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Relay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_message_service_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RPower); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_message_service_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_message_service_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceChain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_message_service_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TileDevices); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_message_service_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tile64); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_message_service_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TileEffect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_message_service_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SensorAmbientLight); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_message_service_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDevicesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_message_service_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDevicesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_message_service_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetLocationLabelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_message_service_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetLocationLabelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_message_service_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetGroupLabelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_message_service_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetGroupLabelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_message_service_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetDeviceLabelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_message_service_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetDeviceLabelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_message_service_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetColorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_message_service_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetColorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_message_service_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPowerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_message_service_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPowerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_message_service_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StrobeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_message_service_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StrobeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_message_service_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ColorCycleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_message_service_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ColorCycleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_message_service_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TwinkleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_message_service_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TwinkleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_message_service_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VisualizerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_message_service_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VisualizerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_message_service_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TheaterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_message_service_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TheaterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_message_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   58,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_message_service_proto_goTypes,
		DependencyIndexes: file_proto_message_service_proto_depIdxs,
		MessageInfos:      file_proto_message_service_proto_msgTypes,
	}.Build()
	File_proto_message_service_proto = out.File
	file_proto_message_service_proto_rawDesc = nil
	file_proto_message_service_proto_goTypes = nil
	file_proto_message_service_proto_depIdxs = nil
}
